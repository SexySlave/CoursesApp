package com.sexyslave.coursesapp

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.clickable // –î–ª—è Modifier.clickable
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.automirrored.filled.List

import androidx.compose.material.icons.filled.KeyboardArrowDown
import androidx.compose.material.icons.filled.List
import androidx.compose.material.icons.filled.Search
import androidx.compose.material.icons.filled.Star

import androidx.compose.material.icons.outlined.FavoriteBorder // –î–ª—è "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" –≤ –∫–∞—Ä—Ç–æ—á–∫–µ
import androidx.compose.material.icons.outlined.Home // –î–ª—è "–ì–ª–∞–≤–Ω–∞—è"
import androidx.compose.material.icons.outlined.Person // –î–ª—è "–ê–∫–∫–∞—É–Ω—Ç"
import androidx.compose.material3.Button
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.Divider
import androidx.compose.material3.Icon
import androidx.compose.material3.IconButton
import androidx.compose.material3.NavigationBar
import androidx.compose.material3.NavigationBarItem
import androidx.compose.material3.NavigationBarItemDefaults
import androidx.compose.material3.Text
import androidx.compose.material3.TextField
import androidx.compose.material3.TextFieldDefaults
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
// import androidx.compose.ui.graphics.vector.ImageVector // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é ImageVector –¥–ª—è painterResource
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.PlatformTextStyle // –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç
import androidx.compose.ui.text.TextStyle // –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextOverflow
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import cafe.adriel.voyager.core.screen.Screen

object HomeScreen : Screen {
    @Composable
    override fun Content() {
        CoursesScreen()
    }
}

@Composable
fun CoursesScreen() {
    var selectedItemIndex by remember { mutableStateOf(0) }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .background(Color(0xFF1E1E1E))
    ) {
        Spacer(modifier = Modifier.height(10.dp))

        // üîé SearchBar + Filter
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(start = 12.dp, top = 36.dp, end = 12.dp, bottom = 12.dp), // –£–≤–µ–ª–∏—á–µ–Ω –≤–µ—Ä—Ö–Ω–∏–π –æ—Ç—Å—Ç—É–ø
            verticalAlignment = Alignment.CenterVertically
        ) {
            TextField(
                value = "", // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –ø–æ–∏—Å–∫–∞ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å
                onValueChange = { /* TODO: –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–∏—Å–∫–∞ */ },
                placeholder = { Text("Search courses...", style = TextStyle(fontSize = 16.sp, platformStyle = PlatformTextStyle(includeFontPadding = false))) }, // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ —É–≤–µ–ª–∏—á–µ–Ω –∏ —É–±—Ä–∞–Ω—ã –æ—Ç—Å—Ç—É–ø—ã
                leadingIcon = {
                    Icon(painter =  painterResource(R.drawable.search_24dp_ffffff), contentDescription = "Search Icon", modifier = Modifier.size(24.dp),  tint = Color.White)
                },
                modifier = Modifier
                    .weight(1f)
                    .height(48.dp),
                shape = RoundedCornerShape(24.dp), // –û–∫—Ä—É–≥–ª–∞—è —Ñ–æ—Ä–º–∞
                textStyle = TextStyle(fontSize = 16.sp, platformStyle = PlatformTextStyle(includeFontPadding = false)), // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞, —É–±—Ä–∞–Ω—ã –æ—Ç—Å—Ç—É–ø—ã
                colors = TextFieldDefaults.colors( // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞
                    focusedTextColor = Color.White,
                    unfocusedTextColor = Color.White,
                    cursorColor = Color.White,
                    focusedContainerColor = Color(0xFF2C2C2C), // –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–∞–∫ —É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                    unfocusedContainerColor = Color(0xFF2C2C2C),
                    disabledContainerColor = Color(0xFF2C2C2C),
                    focusedIndicatorColor = Color.Transparent, // –ë–µ–∑ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
                    unfocusedIndicatorColor = Color.Transparent,
                    disabledIndicatorColor = Color.Transparent,
                    focusedLeadingIconColor = Color(0xFF9E9E9E),
                    unfocusedLeadingIconColor = Color(0xFF9E9E9E),
                    focusedPlaceholderColor = Color(0xFF9E9E9E),
                    unfocusedPlaceholderColor = Color(0xFF9E9E9E)
                )
            )
            Spacer(modifier = Modifier.width(8.dp))
            Box( // –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∫—Ä—É–≥–ª–æ–π –∫–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞
                modifier = Modifier
                    .size(48.dp) // –†–∞–∑–º–µ—Ä —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã—Å–æ—Ç–µ TextField
                    .background(color = Color(0xFF2C2C2C), shape = CircleShape),
                contentAlignment = Alignment.Center
            ) {
                IconButton(onClick = { /* TODO: –ª–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ */ }) {
                    Icon(
                        painter =  painterResource(R.drawable.filter_alt_24dp_ffffff), // –ò–∫–æ–Ω–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞
                        contentDescription = "Filter courses",
                        tint = Color.White // –ë–µ–ª–∞—è –∏–∫–æ–Ω–∫–∞,
                        , modifier = Modifier.size(24.dp)
                    )
                }
            }
        }

        Row( // –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è Row –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
            modifier = Modifier
                .fillMaxWidth()
                .padding(start = 16.dp, end = 16.dp), // –û—Ç—Å—Ç—É–ø—ã –æ—Ç –∫—Ä–∞–µ–≤ —ç–∫—Ä–∞–Ω–∞ –∏ —Å–Ω–∏–∑—É
            horizontalArrangement = Arrangement.End // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é
        ) {
            Row( // –°–∞–º–∞ –∫–Ω–æ–ø–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
                modifier = Modifier
                    .background(color = Color(0x002C2C2C), shape = RoundedCornerShape(8.dp))
                    .clickable { /* TODO: –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–º–µ–Ω—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ */ }
                    .padding(horizontal = 12.dp, vertical = 6.dp), // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∏ –∏–∫–æ–Ω–∫–∏
                verticalAlignment = Alignment.CenterVertically
            ) {
                Text(
                    text = "–ü–æ –¥–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è",
                    color = Color.Green, // –ú–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ Color.White –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    fontSize = 14.sp
                )
                Spacer(modifier = Modifier.width(4.dp))
                Icon(
                    painter = painterResource(R.drawable.swap_vert_24dp_ffffff),
                    contentDescription = "–ò–∑–º–µ–Ω–∏—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É",
                    tint = Color.Green, // –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ç–µ–∫—Å—Ç—É
                    modifier = Modifier.size(18.dp)

                )
            }
        }

        // üìö –°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤
        LazyColumn(
            modifier = Modifier.weight(1f) // –î–∞–µ–º LazyColumn –≤–µ—Å—å –¥–æ—Å—Ç—É–ø–Ω—ã–π –≤–µ—Å
        ) {
            items(sampleCourses) { course ->
                CourseCard(course)
            }
        }

        // ‚¨áÔ∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å–Ω–∏–∑—É
        Divider(color = Color.DarkGray, thickness = 1.dp) // –í–µ—Ä—Ö–Ω—è—è —Å–µ—Ä–∞—è –ø–æ–ª–æ—Å–∫–∞
        NavigationBar(
            containerColor = Color(0xFF2C2C2C), // –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω –±–∞—Ä–∞
        ) {
            NavigationBarItem(
                selected = selectedItemIndex == 0,
                onClick = { selectedItemIndex = 0 },
                icon = { Icon(Icons.Outlined.Home, contentDescription = "–ì–ª–∞–≤–Ω–∞—è") },
                label = { Text("–ì–ª–∞–≤–Ω–∞—è") },
                colors = NavigationBarItemDefaults.colors(
                    selectedIconColor = Color(0xFF388E3C),
                    unselectedIconColor = Color.LightGray,
                    selectedTextColor = Color(0xFF388E3C),
                    unselectedTextColor = Color.LightGray,
                    indicatorColor = Color.Transparent // –£–±–∏—Ä–∞–µ–º —Ñ–æ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
                )
            )
            NavigationBarItem(
                selected = selectedItemIndex == 1,
                onClick = { selectedItemIndex = 1 },
                icon = { Icon(painterResource( R.drawable.bookmark_24dp_ffffff), contentDescription = "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", modifier = Modifier.size(24.dp))  },
                label = { Text("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ") },
                colors = NavigationBarItemDefaults.colors(
                    selectedIconColor = Color(0xFF388E3C),
                    unselectedIconColor = Color.LightGray,
                    selectedTextColor = Color(0xFF388E3C),
                    unselectedTextColor = Color.LightGray,
                    indicatorColor = Color.Transparent
                )
            )
            NavigationBarItem(
                selected = selectedItemIndex == 2,
                onClick = { selectedItemIndex = 2 },
                icon = { Icon(Icons.Outlined.Person, contentDescription = "–ê–∫–∫–∞—É–Ω—Ç") },
                label = { Text("–ê–∫–∫–∞—É–Ω—Ç") },
                colors = NavigationBarItemDefaults.colors(
                    selectedIconColor = Color(0xFF388E3C),
                    unselectedIconColor = Color.LightGray,
                    selectedTextColor = Color(0xFF388E3C),
                    unselectedTextColor = Color.LightGray,
                    indicatorColor = Color.Transparent
                )
            )
        }
    }
}

@Composable
fun CourseCard(course: Course) {
    Card(
        modifier = Modifier
            .fillMaxWidth()
            .padding(12.dp),
        shape = RoundedCornerShape(12.dp), // –û–±—â–µ–µ –∑–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        colors = CardDefaults.cardColors(containerColor = Color(0xFF2C2C2C))
    ) {
        Column {
            Box( // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ–≤–µ—Ä–ª–µ–µ–≤
                modifier = Modifier
                    .fillMaxWidth()
                    .height(160.dp)
                    .clip(RoundedCornerShape(12.dp)) // –ó–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —É–≥–ª–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
            ) {
                Image(
                    painter = painterResource(R.drawable.card1), // –ò—Å–ø–æ–ª—å–∑—É–µ–º course.imageRes
                    contentDescription = null,
                    contentScale = ContentScale.Crop,
                    modifier = Modifier.fillMaxSize()
                )

                // –ö–Ω–æ–ø–∫–∞ "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
                Box(
                    modifier = Modifier
                        .align(Alignment.TopEnd)
                        .padding(6.dp) // –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –æ—Ç—Å—Ç—É–ø –æ—Ç –∫—Ä–∞–µ–≤ –∫–∞—Ä—Ç–∏–Ω–∫–∏
                        .background(
                            color = Color.Black.copy(alpha = 0.5f),
                            shape = RoundedCornerShape(12.dp) // –ù–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–º –∑–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏
                        )
                        .padding(2.dp) // –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—Å—Ç—É–ø –¥–ª—è –∏–∫–æ–Ω–∫–∏
                ) {
                    IconButton(
                        onClick = { /* TODO: Handle favorite click */ },
                        modifier = Modifier.size(20.dp) // –Ø–≤–Ω–æ —É–º–µ–Ω—å—à–∏–º —Ä–∞–∑–º–µ—Ä IconButton
                    ) {
                        Icon(
                            painter = painterResource( R.drawable.bookmark_24dp_ffffff), // –ò—Å–ø–æ–ª—å–∑—É–µ–º drawable –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
                            contentDescription = "Add to favorites",
                            tint = Color.White,
                            modifier = Modifier.fillMaxSize() // –ò–∫–æ–Ω–∫–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç IconButton
                        )
                    }
                }

                // –û–≤–µ—Ä–ª–µ–π —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∏ –¥–∞—Ç–æ–π –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É
                Row(
                    modifier = Modifier
                        .align(Alignment.BottomStart)
                        .padding(8.dp),
                    verticalAlignment = Alignment.CenterVertically
                ) {
                    // –§–æ–Ω –¥–ª—è –∑–≤–µ–∑–¥ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞
                    Row(
                        modifier = Modifier
                            .background(
                                color = Color.Black.copy(alpha = 0.5f),
                                shape = RoundedCornerShape(16.dp) // –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –∑–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ
                            )
                            .padding(horizontal = 8.dp, vertical = 4.dp), // –ù–µ–º–Ω–æ–≥–æ –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–∞–¥–¥–∏–Ω–≥
                        verticalAlignment = Alignment.CenterVertically
                    ) {
                        Icon(
                            Icons.Default.Star,
                            contentDescription = null,
                            tint = Color.Green,
                            modifier = Modifier.size(14.dp) // –ù–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∏–º –∑–≤–µ–∑–¥—É
                        )
                        Text(
                            text = "${course.rating}",
                            color = Color.White,
                            fontWeight = FontWeight.Bold,
                            fontSize = 12.sp,
                            modifier = Modifier.padding(start = 4.dp)
                        )
                    }

                    Spacer(modifier = Modifier.width(8.dp))

                    // –§–æ–Ω –¥–ª—è –¥–∞—Ç—ã
                    Box(
                        modifier = Modifier
                            .background(
                                color = Color.Black.copy(alpha = 0.5f),
                                shape = RoundedCornerShape(16.dp) // –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –∑–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ
                            )
                            .padding(horizontal = 8.dp, vertical = 4.dp) // –ù–µ–º–Ω–æ–≥–æ –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–∞–¥–¥–∏–Ω–≥
                    ) {
                        Text(
                            text = course.date,
                            color = Color.White,
                            fontSize = 12.sp
                        )
                    }
                }
            }

            Text(
                text = course.title,
                color = Color.White,
                fontWeight = FontWeight.Bold,
                fontSize = 18.sp,
                modifier = Modifier.padding(start = 12.dp, end = 12.dp, top = 12.dp)
            )
            Text(
                text = course.description,
                color = Color.LightGray,
                fontSize = 14.sp,
                maxLines = 2,
                overflow = TextOverflow.Ellipsis,
                modifier = Modifier.padding(start = 12.dp, end = 12.dp, top = 8.dp, bottom = 8.dp)
            )
            Row(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(start = 12.dp, end = 12.dp, top = 8.dp, bottom = 12.dp),
                horizontalArrangement = Arrangement.SpaceBetween,
                verticalAlignment = Alignment.CenterVertically
            ) {
                Text("${course.price} ‚ÇΩ", color = Color.White, fontWeight = FontWeight.Bold)
                Text(
                    "–ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚ûú",
                    color = Color(0xFF388E3C),
                    fontWeight = FontWeight.Medium,
                    modifier = androidx . compose . ui . Modifier.clickable { /* TODO: Handle details click */ }
                )
            }
        }
    }
}


data class Course(
    val title: String,
    val description: String,
    val price: String,
    val rating: Double,
    val date: String,
    val imageRes: Int
)

val sampleCourses = listOf(
    Course(
        "Java-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –Ω—É–ª—è",
        "–û—Å–≤–æ–π—Ç–µ backend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Java...",
        "999",
        4.9,
        "22 –ú–∞—è 2024",
        android.R.drawable.ic_menu_gallery // Placeholder, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã
    ),
    Course(
        "3D-–¥–∂–µ–Ω–µ—Ä–∞–ª–∏—Å—Ç",
        "–û—Å–≤–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏—é 3D-–¥–∂–µ–Ω–µ—Ä–∞–ª–∏—Å—Ç–∞ –∏ —Å—Ç–∞–Ω—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º...",
        "12000",
        3.9,
        "10 –°–µ–Ω—Ç—è–±—Ä—è 2024",
        android.R.drawable.ic_menu_gallery // Placeholder, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã
    )
)
